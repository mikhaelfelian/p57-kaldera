Postman collection :
http://dev.kopmensa.com/Kopmensa_API.postman_collection.json

Login :
	URI 	: <base_url>/api/anggota/profile
	Method	: POST
	Body 	: x-www-form-urlencoded
	user 	: <your_username>
	pass 	: <your_password>
	
	Format :
	{
		"status": 200,
		"token": "<token_value>",
		"data": {
			"first_name": "<your_name>",
			"username": "<your_username>",
			"email": "<your_email>",
			"tipe": "<your_role>"
		}
	}
	
Profile
	URI 	: <base_url>/api/anggota/profile
	Method	: GET
	Format 	:
	{
		"success": true,
		"data": {
			"first_name": "<your_name>",
			"username": "<your_username>",
			"email": "<your_email>",
			"tipe": "<your_role>"
		}
	}
	
Logout
	URI 	: <base_url>/api/anggota/logout
	Method	: GET
	Format 	:
	{
		"status": 200,
		"messages": {
			"success": "User logged out successfully"
		}
	}

Produk
	URI 	: <base_url>/api/pos/produk
	Method	: GET
	Parameters:
		per_page	: <number> (optional, default: 10, max: 100)
		keyword		: <string> (optional, search by item name, code, barcode, category, brand)
		page		: <number> (optional, default: 1, for pagination)
	Format 	:
	{
		"total": 7272,
		"current_page": 1,
		"per_page": 2,
		"total_page": 3636,
		"items": [
			{
				"id": 7293,
				"id_kategori": 1,
				"id_merk": 3,
				"created_at": "2025-07-05 12:06:02",
				"updated_at": "2025-07-05 12:06:02",
				"merk": "Mayora",
				"kategori": "MINUMAN",
				"kode": "117260725",
				"barcode": "",
				"item": "tes coba sku",
				"deskripsi": "",
				"jml_min": 1,
				"harga_jual": 67000,
				"harga_beli": 50000,
				"foto": null,
				"options": {
					"harga": [],
					"varian": null,
					"galeri": null
				}
			},
			{
				"id": 7292,
				"id_kategori": 1,
				"id_merk": 1,
				"created_at": "2025-07-05 08:48:48",
				"updated_at": "2025-07-05 08:49:14",
				"merk": "Indofood",
				"kategori": "MINUMAN",
				"kode": "116260725",
				"barcode": "",
				"item": "TEST",
				"deskripsi": "dsds",
				"jml_min": 1,
				"harga_jual": 50000,
				"harga_beli": 5000,
				"foto": null,
				"options": {
					"harga": [
						{
							"id": "8",
							"nama": "Anggota",
							"jml_min": "1",
							"harga": "6000"
						},
						{
							"id": "9",
							"nama": "tipe a",
							"jml_min": "1",
							"harga": "5500"
						}
					],
					"varian": null,
					"galeri": null
				}
			}
		]
	}

Produk Detail
	URI 	: <base_url>/api/pos/produk/detail/<id>
	Method	: GET
	Format 	:
	{
		"id": 1,
		"created_at": "2025-06-29 11:47:00",
		"updated_at": "2025-06-30 07:20:14",
		"merk": null,
		"kategori": "MINUMAN",
		"kode": "116260625",
		"barcode": "88993351124100",
		"item": "GF MILK UHT CHOCO MALT 250ML",
		"deskripsi": "8993351124100",
		"jml_min": 2,
		"harga_jual": 8500,
		"harga_beli": 6803,
		"foto": null
	}

Kategori
	URI 	: <base_url>/api/pos/category
	Method	: GET
	Parameters:
		per_page	: <number> (optional, default: 10, max: 100)
		keyword		: <string> (optional, search by category name, code, or description)
		page		: <number> (optional, default: 1, for pagination)
	Format 	:
	{
		"total": 52,
		"current_page": 1,
		"per_page": 10,
		"total_page": 6,
		"items": [
			{
				"id": 52,
				"kode": "KTG-052",
				"kategori": "PRODUK KOPERASI",
				"keterangan": null,
				"status": 1,
				"created_at": "2025-08-02 12:21:00",
				"updated_at": "2025-06-29 12:26:49"
			},
			{
				"id": 51,
				"kode": "KTG-051",
				"kategori": "MAKANA",
				"keterangan": null,
				"status": 1,
				"created_at": "2025-08-01 12:21:00",
				"updated_at": "2025-06-29 12:26:49"
			}
		]
	}

Kategori Detail
	URI 	: <base_url>/api/pos/category/<id>
	Method	: GET
	Format 	:
	{
		"id": 52,
		"kode": "KTG-052",
		"kategori": "PRODUK KOPERASI",
		"keterangan": null,
		"status": 1,
		"created_at": "2025-08-02 12:21:00",
		"updated_at": "2025-06-29 12:26:49"
	}

Transaksi
	URI 	: <base_url>/api/pos/transaksi
	Method	: GET
	Parameters:
		id_pelanggan	: <number> (required, customer ID)
	Format 	:
	{
		"success": true,
		"message": "Transactions retrieved successfully",
		"total": 2,
		"id_pelanggan": 123,
		"transactions": [
			{
				"id": 1,
				"id_user": 5,
				"id_sales": 2,
				"id_pelanggan": 123,
				"id_gudang": 1,
				"no_nota": "TRX-20250801-0001",
				"created_at": "2025-08-01 10:00:00",
				"updated_at": "2025-08-01 10:05:00",
				"deleted_at": null,
				"tgl_bayar": "2025-08-01",
				"tgl_masuk": "2025-08-01",
				"tgl_keluar": null,
				"jml_total": 100000,
				"jml_biaya": 0,
				"jml_ongkir": 0,
				"jml_retur": 0,
				"diskon": 0,
				"jml_diskon": 0,
				"jml_subtotal": 100000,
				"ppn": 0,
				"jml_ppn": 0,
				"jml_gtotal": 100000,
				"jml_bayar": 100000,
				"jml_kembali": 0,
				"jml_kurang": 0,
				"disk1": 0,
				"jml_disk1": 0,
				"disk2": 0,
				"jml_disk2": 0,
				"disk3": 0,
				"jml_disk3": 0,
				"metode_bayar": "cash",
				"status": "selesai",
				"status_nota": "lunas",
				"status_ppn": "tidak",
				"status_bayar": "lunas",
				"status_retur": "tidak"
			},
			{
				"id": 2,
				"id_user": 5,
				"id_sales": 2,
				"id_pelanggan": 123,
				"id_gudang": 1,
				"no_nota": "TRX-20250802-0002",
				"created_at": "2025-08-02 11:00:00",
				"updated_at": "2025-08-02 11:05:00",
				"deleted_at": null,
				"tgl_bayar": "2025-08-02",
				"tgl_masuk": "2025-08-02",
				"tgl_keluar": null,
				"jml_total": 200000,
				"jml_biaya": 0,
				"jml_ongkir": 0,
				"jml_retur": 0,
				"diskon": 0,
				"jml_diskon": 0,
				"jml_subtotal": 200000,
				"ppn": 0,
				"jml_ppn": 0,
				"jml_gtotal": 200000,
				"jml_bayar": 200000,
				"jml_kembali": 0,
				"jml_kurang": 0,
				"disk1": 0,
				"jml_disk1": 0,
				"disk2": 0,
				"jml_disk2": 0,
				"disk3": 0,
				"jml_disk3": 0,
				"metode_bayar": "transfer",
				"status": "selesai",
				"status_nota": "lunas",
				"status_ppn": "tidak",
				"status_bayar": "lunas",
				"status_retur": "tidak"
			}
		]
	}

	URI 	: <base_url>/api/pos/transaksi/<id_pelanggan>
	Method	: GET
	Format 	:
	{
		"success": true,
		"message": "Transactions retrieved successfully",
		"total": 2,
		"id_pelanggan": 123,
		"transactions": [
			// ... (same as above)
		]
	}

PIN Management
	Note: All PIN endpoints require JWT authentication. Include JWT token in Authorization header:
	Authorization: Bearer <your_jwt_token>

	Set PIN (First Time Setup)
	URI 	: <base_url>/api/anggota/set-pin
	Method	: POST
	Body 	: x-www-form-urlencoded
	pin		: <6_digit_pin>
	confirm_pin	: <6_digit_pin_confirmation>
	
	Format (Success - 200):
	{
		"success": true,
		"message": "PIN berhasil diatur",
		"data": {
			"user_id": 123,
			"pin_set": true
		}
	}
	
	Format (Error - 400):
	{
		"status": 400,
		"error": "PIN sudah diatur sebelumnya. Gunakan fungsi ubah PIN untuk mengubah PIN yang ada."
	}

	Validate PIN
	URI 	: <base_url>/api/anggota/validate-pin
	Method	: POST
	Body 	: x-www-form-urlencoded
	pin		: <6_digit_pin>
	
	Format (Success - 200):
	{
		"success": true,
		"message": "PIN valid",
		"data": {
			"user_id": 123,
			"pin_valid": true,
			"user_info": {
				"first_name": "John",
				"username": "john_doe",
				"email": "john@example.com",
				"tipe": "1"
			}
		}
	}
	
	Format (Error - 401):
	{
		"status": 401,
		"error": "PIN tidak valid"
	}

	Change PIN
	URI 	: <base_url>/api/anggota/change-pin
	Method	: POST
	Body 	: x-www-form-urlencoded
	current_pin		: <current_6_digit_pin>
	new_pin		: <new_6_digit_pin>
	confirm_new_pin	: <new_6_digit_pin_confirmation>
	
	Format (Success - 200):
	{
		"success": true,
		"message": "PIN berhasil diubah",
		"data": {
			"user_id": 123,
			"pin_changed": true
		}
	}
	
	Format (Error - 401):
	{
		"status": 401,
		"error": "PIN saat ini tidak valid"
	}

	Check PIN Status
	URI 	: <base_url>/api/anggota/pin-status
	Method	: GET
	Headers	: Authorization: Bearer <your_jwt_token>
	
	Format (Success - 200):
	{
		"success": true,
		"data": {
			"user_id": 123,
			"pin_set": true,
			"user_info": {
				"first_name": "John",
				"username": "john_doe",
				"email": "john@example.com",
				"tipe": "1"
			}
		}
	}

	Reset PIN (Forgot PIN)
	URI 	: <base_url>/api/anggota/reset-pin
	Method	: POST
	Body 	: x-www-form-urlencoded
	email		: <your_email> (or username: <your_username>)
	
	Format (Success - 200):
	{
		"success": true,
		"message": "PIN berhasil direset",
		"data": {
			"user_id": 123,
			"new_pin": "789012",
			"pin_reset": true,
			"note": "Simpan PIN baru ini dengan aman. PIN akan di-hash setelah digunakan."
		}
	}

	PIN Requirements:
	- Length: Exactly 6 digits
	- Format: Numeric only (0-9)
	- Cannot be empty or null
	- PIN and confirm PIN must match
	- Cannot set PIN if already exists
	- Current PIN must be valid for changes
	- New PIN must be different from current PIN

	PIN Security Features:
	- PINs are securely hashed using bcrypt algorithm
	- Automatic salting for each PIN
	- Original PIN never stored in database
	- All endpoints require JWT authentication
	- Users can only access their own PIN data

	Common Error Responses:
	- 400: Validation Error (PIN format, confirmation mismatch, etc.)
	- 401: Unauthorized (Invalid PIN, PIN not set, etc.)
	- 403: Forbidden (Access denied)
	- 404: Not Found (User not found)
	- 500: Internal Server Error (Server issues)
